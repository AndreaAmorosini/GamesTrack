# Use root/example as user/password credentials

services:

  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    networks:
      - gametrack
    volumes:
      - mongo_data:/data/db


  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_URL: mongodb://root:root@mongo:27017/
      ME_CONFIG_BASICAUTH: false
    networks:
      - gametrack

  fastapi:
    build:
      context: ./backend   # <-- the path to your Dockerfile
    container_name: fastapi
    depends_on:
      - mongo
    environment:
      MONGO_INIT_USER: root
      MONGO_INIT_PASS: root
      # IGDB_CLIENT_ID: 3g9sfbgapbmxgmlm3hf9d3w8jsw8qx
      # IGDB_CLIENT_SECRET: 20jwvc5blf7k3jjoe8ujxavveh0bag
      IGDB_CLIENT_ID: ${IGDB_CLIENT_ID}
      IGDB_CLIENT_SECRET: ${IGDB_CLIENT_SECRET}
    ports:
      - "8000:8000"
    networks:
      - gametrack

  redis:
    image: redis
    restart: always
    ports:
      - 6379:6379
    networks:
      - gametrack

  sync-worker:
    build:
      context: ./sync_worker
    container_name: sync-worker
    command: ["arq", "app.worker_sync.WorkerSettings", "--watch", "app"]
    depends_on:
      - fastapi
      - mongo
      - redis
    environment:
      PYTHONUNBUFFERED: 1
      MONGO_INIT_USER: root
      MONGO_INIT_PASS: root
      IGDB_CLIENT_ID: ${IGDB_CLIENT_ID}
      IGDB_CLIENT_SECRET: ${IGDB_CLIENT_SECRET}
    networks:
      - gametrack
    volumes:
      - ./backend:/app


  frontend:
    build:
      context: ./frontend
    container_name: frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - fastapi
    networks:
      - gametrack
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=http://localhost:8000

volumes:
  mongo_data:

networks:
  gametrack:
